name: Claude Code

on:
  workflow_call:
    inputs:
      trigger_phrase:
        description: 'Phrase to trigger Claude'
        required: false
        default: '@claude'
        type: string
      assignee_trigger:
        description: 'Username to trigger on assignment'
        required: false
        default: ''
        type: string
      model:
        description: 'Claude model to use'
        required: false
        default: ''
        type: string
      system_prompt:
        description: 'Custom system prompt for Claude'
        required: false
        default: '常に日本語で回答してください。コードレビューを行う際は、以下の点に注意してください：1. コーディング標準への準拠、2. 新しいコードにはテストが含まれているか、3. TypeScriptを新しいファイルで使用しているか。簡潔で実用的なフィードバックを提供してください。'
        type: string
      allowed_tools:
        description: 'Allowed tools for Claude (e.g., "Bash(npm install),Bash(npm run build)")'
        required: false
        default: ''
        type: string
      max_turns:
        description: 'Maximum conversation turns'
        required: false
        default: 1
        type: number
    secrets:
      ANTHROPIC_API_KEY:
        description: 'Anthropic API Key'
        required: true

jobs:
  claude:
    if: |
      github.event_name == 'issue_comment' ||
      (github.event_name == 'issues' && 
       (github.event.action == 'opened' || 
        (github.event.action == 'assigned' && 
         github.event.assignee.login == inputs.assignee_trigger)))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
      actions: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

          # Optional: Customize the trigger phrase
          trigger_phrase: ${{ inputs.trigger_phrase }}

          # Optional: Trigger when specific user is assigned to an issue
          assignee_trigger: ${{ inputs.assignee_trigger }}

          # Configure Claude's behavior with CLI arguments
          claude_args: |
            ${{ inputs.model != '' && format('--model {0}', inputs.model) || '' }}
            ${{ inputs.allowed_tools != '' && format('--allowedTools "{0}"', inputs.allowed_tools) || '' }}
            --system-prompt "${{ inputs.system_prompt }}"
            --max-turns ${{ inputs.max_turns }}
